name: test Deployment

env: 
  REACT_APP_MOVIE_API_URL: http://localhost:5000

on:
  workflow_dispatch:
  
  push:
    branches:
      - main
    paths:
      - starter/frontend/**

jobs:


  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name:
        run: |
          cd starter/frontend && \
          docker build --build-arg=${{ env.REACT_APP_MOVIE_API_URL }} --tag=mp-frontend:latest . && \
          docker run --name mp-frontend -p 3000:3000 -d mp-frontend  

  stage_deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: staging

    steps:
      # Simulate a Deployment
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          #aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: us-east-1

      - name: Login to Amazon 
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and push to ECR
        uses: docker/build-push-action@v4
        with:
          context: starter/frontend
          push: true
          tags: 961247951538.dkr.ecr.us-east-1.amazonaws.com/frontend:latest
          build-args: |
            REACT_APP_MOVIE_API_URL=${{ secrets.REACT_APP_MOVIE_API_URL }}
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Deploy to Kubernetes
        working-directory: starter/frontend/k8s
        run: |
          aws eks update-kubeconfig --name cluster --region us-east-1
          kustomize edit set image frontend=961247951538.dkr.ecr.us-east-1.amazonaws.com/frontend:latest
          /# Apply the manifests to the cluster
          kustomize build | kubectl apply -f 




